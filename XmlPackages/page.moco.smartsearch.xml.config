<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Search" debug="false" includeentityhelper="true">

  <!-- ###################################################################################################### -->
  <!-- Copyright AspDotNetStorefront.com, 1995-2006.  All Rights Reserved.					                -->
  <!-- http://www.aspdotnetstorefront.com														                -->
  <!-- For details on this license please visit  the product homepage at the URL above.		                -->
  <!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
  <!-- $Header: /v6.1/Web/XmlPackages/entity.tableexpanded2.xml.config 1     12/30/05 2:33p Administrator $	-->
  <!--                                                                                                        -->
  <!-- ###################################################################################################### -->

  <webquery name="searchresults" RetType="xml" timeout="30">
    <url><![CDATA[{SmartSearch}&searchString={searchString}&sortField={sortField}&pageNumber={pageNumber}&pageSize={pageSize}&facetQuery={facet}]]></url>
    <querystringreplace replaceTag="{SmartSearch}" replacetype="webconfig" replaceparamname="SmartSearchURL" defvalue="" validationpattern=""/>
    <querystringreplace replaceTag="{searchString}" replacetype="runtime" replaceparamname="SearchTerm" defvalue="" validationpattern=""/>
    <querystringreplace replaceTag="{sortField}" replacetype="request" replaceparamname="sortField" defvalue="" validationpattern=""/>
    <querystringreplace replaceTag="{pageNumber}" replacetype="request" replaceparamname="pageNumber" defvalue="1" validationpattern=""/>
    <querystringreplace replaceTag="{pageSize}" replacetype="request" replaceparamname="pageSize" defvalue="16" validationpattern=""/>
    <querystringreplace replaceTag="{facet}" replacetype="request" replaceparamname="facet" defvalue="" validationpattern=""/>
  </webquery>

  <PackageTransform>
    <xsl:stylesheet version="2.0"
							 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
							 xmlns:aspdnsf="urn:aspdnsf"
							 exclude-result-prefixes="aspdnsf">
      <xsl:output method="html" omit-xml-declaration="yes" />

      <xsl:param name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
      <xsl:param name="WebConfigLocaleSetting" select="/root/Runtime/WebConfigLocaleSetting" />
      <xsl:param name="ViewAllProdPm" select="/root/QueryString/viewallproducts"/>
      <xsl:param name="ShowAddToCartOnGrid" select="aspdnsf:AppConfig('ShowAddToCartOnGrid')" />
      <xsl:param name="ViewAllArtPm" select="/root/QueryString/viewallarticles"/>
      <xsl:param name="EntityID" select="/root/Runtime/EntityID" />
      <xsl:param name="EntityName" select="/root/Runtime/EntityName" />
      <xsl:param name="CurrentFacet" select="/root/QueryString/facet" />

      <xsl:param name="searchTerm">
        <xsl:choose>
          <xsl:when test="contains(/root/Runtime/SearchTerm, '%26')">
            <xsl:value-of select='translate(/root/QueryString/SearchTerm, "%26", "")'/>
          </xsl:when>
          <xsl:when test="/root/Runtime/SearchTerm">
            <xsl:value-of select="/root/Runtime/SearchTerm" />
          </xsl:when>
          <xsl:when test="contains(/root/QueryString/SearchTerm, '%26')">
            <xsl:value-of select='translate(/root/Runtime/SearchTerm, "%26", "")'/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="/root/QueryString/searchterm" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>

      <xsl:param name="pageBase">
        <xsl:choose>
          <xsl:when test="/root/System/RequestedPage = 'search.aspx'">
            <xsl:value-of select="concat(/root/System/FullPageName, '?SearchTerm=',/root/QueryString/searchterm)" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat(/root/System/RequestedPage,'?')" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>

      <xsl:param name="pageNumber">
        <xsl:choose>
          <xsl:when test="/root/searchresults/hits/page/text()">
            <xsl:value-of select="/root/searchresults/hits/page" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="0" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="productIDList">
        <xsl:for-each select="/root/searchresults/hits/hit/document/ProductID">
          <xsl:value-of select="."/>
          <xsl:text>, </xsl:text>
        </xsl:for-each>
      </xsl:param>

      <xsl:param name="defaultItemsPerPage" select="number(16)" />
      <xsl:param name="itemsPerPage">
        <xsl:choose>
          <xsl:when test="/root/searchresults/hits/originhit">
            <xsl:value-of select="16" />
          </xsl:when>
          <xsl:when test="/root/searchresults/hits/pagesize/text()">
            <xsl:value-of select="/root/searchresults/hits/pagesize" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$defaultItemsPerPage" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>

      <xsl:param name="defaultSortField" select="string('Relevance')" />
      <xsl:param name="sortField">
        <xsl:choose>
          <xsl:when test="/root/QueryString/sortfield/text()">
            <xsl:value-of select="/root/QueryString/sortfield" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$defaultSortField" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>



      <xsl:param name="productRecordCount" select="/root/searchresults/hits/count" />
      <xsl:param name="articleRecordCount" select="/root/articleresults/hits/count" />
      <xsl:param name="recordsPerPage" select="$itemsPerPage" />

      <xsl:param name="StringResource_HideBuyButton">
        <xsl:variable name="_sr" select="aspdnsf:StringResource('search.aspx.1000', $LocaleSetting)" />
        <xsl:choose>
          <xsl:when test="$_sr != 'search.aspx.1000'">
            <xsl:value-of select="$_sr" />
          </xsl:when>
          <xsl:otherwise>
            <img alt="Not Available" src="{$SmartSearchIconDirectory}red-not-available.png" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>

      <xsl:param name="StringResource_HidePriceUntilCart">
        <xsl:variable name="_sr" select="aspdnsf:StringResource('search.aspx.1001', $LocaleSetting)" />
        <xsl:choose>
          <xsl:when test="$_sr != 'search.aspx.1001'">
            <xsl:value-of select="$_sr" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="string('$ See Price In Cart')" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="number-format" select="string('#,##0.00')" />

      <xsl:param name="SkinID" select="aspdnsf:SkinID()" />
      <xsl:variable name="StoreUrl" select="string('/')" />
      <xsl:variable name="SmartSearchIconDirectory" select="concat($StoreUrl,'App_Themes/Skin_', $SkinID, '/images/','smartsearch/')" />

      <xsl:template match="/">

        <script type="text/javascript">
          <![CDATA[
		   function refreshPage(pagebase, searchTerm, pageNumber, currentFacet) {
				if(pagebase.indexOf('similar')==0) {
					if(currentFacet == '')
					{
						window.location = pagebase + 'sortField=' + $('#sortField').val() + '&pageSize=' + $('#itemsPerPage').val() + '&pageNumber=1';
					}
					else
					{
							window.location = pagebase + 'sortField=' + $('#sortField').val() + '&pageSize=' + $('#itemsPerPage').val() + '&facet=' + currentFacet + '&pageNumber=1';
					}
					
				} else {
					if(currentFacet == '')
					{
						window.location = pagebase + '&sortField=' + $('#sortField').val() + '&pageSize=' + $('#itemsPerPage').val() + '&pageNumber=1';
					}
					else
					{
						window.location = pagebase + '&sortField=' + $('#sortField').val() + '&pageSize=' + $('#itemsPerPage').val() + '&facet=' + currentFacet + '&pageNumber=1';
					}
				
				}
			}
			
		]]>
        </script>
        <div id="productContent">

          <xsl:value-of select="aspdnsf:Topic('SearchPageHeader')" disable-output-escaping="yes" />
          <span class="searchPageHeader" >
            <xsl:value-of select="/root/QueryString/errormsg" />
          </span>

          <div class="search-results" >
            <xsl:if test="boolean($searchTerm and count(/root/Categories/Category)=0 and count(/root/Sections/Section)=0 and count(/root/Manufacturers/Manufacturer)=0 and $productRecordCount=0 or $searchTerm = '') = false">
              <xsl:value-of select="'Showing '"/>
              <xsl:value-of select="$productRecordCount"/>
              <xsl:choose>
                <xsl:when test="$productRecordCount &gt; 1">
                  <xsl:value-of select="' products matching: '"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="' product matching: '"/>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:value-of select="$searchTerm"/>
              <xsl:value-of select="'  '"/>
            </xsl:if>
            <xsl:if test="$CurrentFacet != ''">
              <div class="remove-faceting" >
                <p>
                  <xsl:value-of select="'Remove All '" />
                  <xsl:element name="a">
                    <xsl:attribute name="class">remove-faceting-link</xsl:attribute>
                    <xsl:attribute name="href">
                      <xsl:value-of select="$pageBase" />
                    </xsl:attribute>
                    <xsl:value-of select="'[x]'"/>
                  </xsl:element>
                  <xsl:apply-templates select="/root/searchresults/hits/facetqueries/facetquery[not(term='Product' and field='ContentType')]" mode="removefacetlinks" />
                </p>
              </div>
            </xsl:if>
          </div>


          <xsl:call-template name="Paging" ></xsl:call-template>

          <xsl:if test="aspdnsf:AppConfigBool('Search_ShowProductsInResults')='true' and $productRecordCount >0">

            <xsl:if test="string-length($ViewAllArtPm) = 0 and string-length($ViewAllProdPm) = 0 ">

              <div class="ss-sortContainer" >
                <div class="ss-sort-selection">
                  <div class="ss-sort-by" >
                    <label>Sort By</label>
                    <select id="sortField" onchange="refreshPage('{$pageBase}','{$searchTerm}', '{$pageNumber}', '{$CurrentFacet}')">
                      <option value="{$sortField}">
                        <xsl:value-of select="$sortField"/>
                      </option>
                      <option value="">---------------</option>
                      <option value="Relevance">Relevance</option>
                      <option value="Highest Rated">Highest Rated</option>
                      <option value="Best Sellers">Best Sellers</option>
                      <option value="New Arrivals">New Arrivals</option>
                      <option value="Lowest Price">Lowest Price</option>
                      <option value="Highest Price">Highest Price</option>
                    </select>
                  </div>
                </div>
                <div class="ss-sort-selection">

                  <div class="ss-selectNumberOfResults" >
                    <label>Items per Page</label>
                    <select id="itemsPerPage" onchange="refreshPage('{$pageBase}','{$searchTerm}', '{$pageNumber}', '{$CurrentFacet}')">
                      <option value="{$itemsPerPage}">
                        <xsl:value-of select="$itemsPerPage"/>
                      </option>
                      <option value="10">10</option>
                      <option value="30">30</option>
                      <option value="60">60</option>
                    </select>
                  </div>
                </div>
              </div>
              <div class="ss-product-list">
                <xsl:apply-templates select="/root/searchresults/hits/hit/document" mode="Grid" />
              </div>
            </xsl:if>

            <xsl:if test="string-length($ViewAllProdPm) &gt; 0">
              <xsl:apply-templates select="/root/searchresults/hits/hit/document[contains(ContentType,'Product')]" />
            </xsl:if>

            <xsl:if test="string-length($ViewAllArtPm) &gt; 0">
              <div align="center" class="backToResults" >
                <a>
                  <xsl:attribute name="href">
                    <xsl:value-of select="concat('search.aspx?SearchTerm=',$searchTerm,'&amp;viewallproducts=true')" />
                  </xsl:attribute>
                  &lt;&lt; Back to product search results
                </a>
              </div>
            </xsl:if>


          </xsl:if>

          <xsl:if test="/root/QueryString/aspxerrorpath">
            <p>
              <xsl:value-of select="aspdnsf:Topic('404Error')" disable-output-escaping="yes" />
            </p>
          </xsl:if>

          <!-- No Search Results Found -->

          <xsl:if test="$searchTerm and count(/root/Categories/Category)=0 and count(/root/Sections/Section)=0 and count(/root/Manufacturers/Manufacturer)=0 and $productRecordCount=0 or $searchTerm = ''">
            <xsl:if test="/root/searchresults/hits/suggest[correction != original]">
          <xsl:value-of select="aspdnsf:Topic('EmptySearchResult')" disable-output-escaping="yes" />
          <p>
            <span class="noResults">Did you Mean: 
            <xsl:element name="a">
              <xsl:attribute name="href">
                <xsl:apply-templates select="/root/searchresults/hits/suggest" mode="suggestions" >
                  <xsl:with-param name="seperator" select="'+'"/>
                </xsl:apply-templates>
              </xsl:attribute>
              <xsl:apply-templates select="/root/searchresults/hits/suggest" mode="suggestions" >
                <xsl:with-param name="seperator" select="' '"/>
              </xsl:apply-templates>
            </xsl:element>
            </span>
          </p>
              </xsl:if>
          <xsl:value-of select="aspdnsf:StringResource('search.aspx.9', $LocaleSetting)" disable-output-escaping="yes" />

          

          </xsl:if>

          <xsl:call-template name="Paging" ></xsl:call-template>

          <xsl:if test="string-length($ViewAllArtPm) &gt; 0">
            <div align="center" class="backToResults">
              <a>
                <xsl:attribute name="href">
                  <xsl:value-of select="concat('search.aspx?SearchTerm=', $searchTerm,'&amp;viewallproducts=true')" />
                </xsl:attribute>
                &lt;&lt; Back to product search results
              </a>
            </div>
          </xsl:if>
        </div>
      </xsl:template>

      <xsl:template match="suggest" mode="suggestions">
        <xsl:param name="seperator" />
        <xsl:choose>
          <xsl:when test="position()=1 and $seperator = '+'">
            <xsl:value-of select="concat('search.aspx?SearchTerm=', concat(correction, $seperator))"/>
          </xsl:when>
          <xsl:when test="position()!=last()">
            <xsl:value-of select="concat(correction, $seperator)" disable-output-escaping="yes" />
          </xsl:when>
          <xsl:when test="position()=last()">
            <xsl:value-of select="correction" disable-output-escaping="yes" />
          </xsl:when>
        </xsl:choose>
      </xsl:template>

    <xsl:template name="for.loop">
      <xsl:param name="i"      />
      <xsl:param name="count"  />
      <xsl:param name="searchTerm" select="$searchTerm"/>
      <xsl:param name="sortField" select="$sortField"/>
      <xsl:param name="defaultSortField" select="$defaultSortField"/>
      <xsl:param name="itemsPerPage" select="$itemsPerPage"/>
      <xsl:param name="defaultItemsPerPage" select="$defaultItemsPerPage"/>
      <xsl:param name="pageNumber" select="$pageNumber"/>
      <xsl:param name="pageBase" select="$pageBase"  />

      <!--begin_: Line_by_Line_Output -->
      <xsl:if test="$i &lt;= $count">

        <xsl:choose>
          <xsl:when test="$pageNumber = $i and $i = 1">
            <!-- match the default URL so this link does not create a duplicate content page with the page number info-->
            <li>
              <xsl:element name="a">
                <xsl:attribute name="href">
                  <xsl:value-of select="$pageBase" />
                  <xsl:if test="$itemsPerPage != '' and $itemsPerPage != $defaultItemsPerPage">
                    &amp;pageSize=<xsl:value-of select="$itemsPerPage" />
                  </xsl:if>
                  <xsl:if test="$sortField != '' and $sortField != $defaultSortField">
                    <xsl:text>&amp;sortField=</xsl:text>
                    <xsl:value-of select="$sortField" />
                  </xsl:if>
                  <xsl:if	test="$CurrentFacet != ''">
                    <xsl:text>&amp;facet=</xsl:text>
                    <xsl:value-of select="$CurrentFacet" />
                  </xsl:if>
                </xsl:attribute>
                <xsl:attribute name="class">
                  <xsl:text>current</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="$i" />
              </xsl:element>
            </li>
          </xsl:when>
          <xsl:when test="$pageNumber = $i">
            <!-- create the basic current page link -->
            <li>
              <xsl:element name="a">
                <xsl:attribute name="href">
                  <xsl:value-of select="$pageBase" />&amp;pageNumber=<xsl:value-of select="$i" />
                  <xsl:if test="$itemsPerPage != '' and $itemsPerPage != $defaultItemsPerPage">
                    &amp;pageSize=<xsl:value-of select="$itemsPerPage" />
                  </xsl:if>
                  <xsl:if test="$sortField != '' and $sortField != $defaultSortField">
                    <xsl:text>&amp;sortField=</xsl:text>
                    <xsl:value-of select="$sortField" />
                  </xsl:if>
                  <xsl:if	test="$CurrentFacet != ''">
                    <xsl:text>&amp;facet=</xsl:text>
                    <xsl:value-of select="$CurrentFacet" />
                  </xsl:if>
                </xsl:attribute>
                <xsl:attribute name="class">
                  <xsl:text>current</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="$i" />
              </xsl:element>
            </li>
          </xsl:when>
          <xsl:when test="$i = 1">
            <!-- make sure page 1 always matches the default URL to avoid duplicate content (this breaks page size) -->
            <li>
              <xsl:element name="a">
                <xsl:attribute name="href">
                  <xsl:value-of select="$pageBase" />
                  <xsl:if test="$itemsPerPage != '' and $itemsPerPage != $defaultItemsPerPage">
                    &amp;pageSize=<xsl:value-of select="$itemsPerPage" />
                  </xsl:if>
                  <xsl:if test="$sortField != '' and $sortField != $defaultSortField">
                    <xsl:text>&amp;sortField=</xsl:text>
                    <xsl:value-of select="$sortField" />
                  </xsl:if>
                  <xsl:if	test="$CurrentFacet != ''">
                    <xsl:text>&amp;facet=</xsl:text>
                    <xsl:value-of select="$CurrentFacet" />
                  </xsl:if>
                </xsl:attribute>
                <xsl:value-of select="$i" />
              </xsl:element>
            </li>
          </xsl:when>
          <xsl:otherwise>
            <li>
              <xsl:element name="a">
                <xsl:attribute name="href">
                  <xsl:value-of select="$pageBase" />&amp;pageNumber=<xsl:value-of select="$i" />
                  <xsl:if test="$itemsPerPage != '' and $itemsPerPage != $defaultItemsPerPage">
                    &amp;pageSize=<xsl:value-of select="$itemsPerPage" />
                  </xsl:if>
                  <xsl:if test="$sortField != '' and $sortField != $defaultSortField">
                    <xsl:text>&amp;sortField=</xsl:text>
                    <xsl:value-of select="$sortField" />
                  </xsl:if>
                  <xsl:if	test="$CurrentFacet != ''">
                    <xsl:text>&amp;facet=</xsl:text>
                    <xsl:value-of select="$CurrentFacet" />
                  </xsl:if>
                </xsl:attribute>
                <xsl:value-of select="$i " />
              </xsl:element>
            </li>
          </xsl:otherwise>
        </xsl:choose>

      </xsl:if>

      <xsl:if test="$i &lt;= $count">
        <xsl:call-template name="for.loop">
          <xsl:with-param name="i">
            <xsl:value-of select="$i+1"/>
          </xsl:with-param>

          <xsl:with-param name="count">
            <xsl:value-of select="$count"/>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:if>

    </xsl:template>

    <xsl:template name="pagingprev">
      <xsl:param name="recordCount" />
      <xsl:param name="linkText">
        <img src="{$SmartSearchIconDirectory}blue-previous.png" alt="previous page" />
      </xsl:param>

      <xsl:choose>
        <!-- make sure page 1 always matches the default url to avoid duplicate content (this breaks page size) -->
        <xsl:when test="$pageNumber = 2">
          <xsl:element name="a">
            <xsl:attribute name="href">
              <xsl:value-of select="concat('?SearchTerm=',$searchTerm)" />
              <xsl:if test="$itemsPerPage != '' and $itemsPerPage != $defaultItemsPerPage">
                &amp;pageSize=<xsl:value-of select="$itemsPerPage" />
              </xsl:if>
              <xsl:if test="$sortField != '' and $sortField != $defaultSortField">
                <xsl:text>&amp;sortField=</xsl:text>
                <xsl:value-of select="$sortField" />
              </xsl:if>
              <xsl:if	test="$CurrentFacet != ''">
                <xsl:text>&amp;facet=</xsl:text>
                <xsl:value-of select="$CurrentFacet" />
              </xsl:if>
            </xsl:attribute>
            <xsl:copy-of select="$linkText" />
          </xsl:element>
        </xsl:when>
        <xsl:when test="$pageNumber &gt; 2">
          <xsl:element name="a">
            <xsl:attribute name="href">
              <xsl:value-of select="concat('?SearchTerm=',$searchTerm,'&amp;pageNumber=',number($pageNumber)-1)" />
              <xsl:if test="$itemsPerPage != '' and $itemsPerPage != $defaultItemsPerPage">
                &amp;pageSize=<xsl:value-of select="$itemsPerPage" />
              </xsl:if>
              <xsl:if test="$sortField != '' and $sortField != $defaultSortField">
                <xsl:text>&amp;sortField=</xsl:text>
                <xsl:value-of select="$sortField" />
              </xsl:if>
              <xsl:if	test="$CurrentFacet != ''">
                <xsl:text>&amp;facet=</xsl:text>
                <xsl:value-of select="$CurrentFacet" />
              </xsl:if>
            </xsl:attribute>
            <xsl:copy-of select="$linkText" />
          </xsl:element>
        </xsl:when>
        <xsl:otherwise>
          <a>
            <xsl:copy-of select="$linkText" />
          </a>
        </xsl:otherwise>
      </xsl:choose>

    </xsl:template>

    <xsl:template name="pagingnext">
      <xsl:param name="recordCount" />
      <xsl:param name="linkText">
        <img src="{$SmartSearchIconDirectory}blue-next.png" alt="next page" />
      </xsl:param>

      <xsl:choose>
        <xsl:when test="($recordCount - ((number($pageNumber)) * $recordsPerPage))&gt; 0">
          <xsl:element name="a">
            <xsl:attribute name="href">
              <xsl:value-of select="concat('?SearchTerm=',$searchTerm,'&amp;pageNumber=',number($pageNumber)+1)" />
              <xsl:if test="$itemsPerPage != $defaultItemsPerPage">
                &amp;pageSize=<xsl:value-of select="$itemsPerPage" />
              </xsl:if>
              <xsl:if test="$sortField != $defaultSortField">
                &amp;sortField=<xsl:value-of select="$sortField" />
              </xsl:if>
              <xsl:if	test="$CurrentFacet != ''">
                <xsl:text>&amp;facet=</xsl:text>
                <xsl:value-of select="$CurrentFacet" />
              </xsl:if>
            </xsl:attribute>
            <xsl:copy-of select="$linkText" />
          </xsl:element>
        </xsl:when>
        <xsl:otherwise>
          <a>
            <xsl:copy-of select="$linkText" />
          </a>
        </xsl:otherwise>
      </xsl:choose>

    </xsl:template>

    <!--<xsl:template match="document[contains(ContentType,'Product')]" />-->

    <!-- document/-->
    <xsl:template match="document" mode="Grid">
      <xsl:param name="pName" select="aspdnsf:GetMLValue(Name)"></xsl:param>
      <xsl:param name="pSEAltText" select="aspdnsf:GetMLValue(Name)"></xsl:param>
      <xsl:param name="variantCount" select="count(Variants/Variant)"/>
      <xsl:param name="hasSizeColor">
        <xsl:choose>
          <xsl:when test="contains(Variants/Variant/Sizes, ',') or contains(Variants/Variant/Colors, ',')">
            <xsl:value-of select="'true'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'false'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="AltText">

        <xsl:choose>
          <xsl:when test="$pSEAltText=''">
            <xsl:value-of select="$pName" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$pSEAltText" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>

      <xsl:variable name="SalePrice" select="SalePrice" />
      <xsl:variable name="Price" select="Price" />
      <xsl:variable name="MSRP" select="MSRP" />

      <xsl:variable name="our-price">
        <xsl:choose>
          <xsl:when test="$SalePrice > 0">
            <xsl:value-of select="$SalePrice" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$Price" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="list-price">
        <xsl:choose>
          <xsl:when test="$MSRP > 0 and $our-price > $MSRP">
            <xsl:value-of select="$our-price" />
          </xsl:when>
          <xsl:when test="$MSRP > 0 and $MSRP > $our-price">
            <xsl:value-of select="$MSRP" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="''" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="productURL" select="aspdnsf:ProductandEntityLink(ProductID, SEName, $EntityID, $EntityName, 0)" />
      <div class="product-item">
        <div class="product-image">
          <xsl:value-of select="aspdnsf:LookupProductImage(ProductID, ImageFileNameOverride, SKU, 'icon', 1, $AltText)" disable-output-escaping="yes"/>
        </div>
        <div class="product-title">
          <a href="{$productURL}">
            <xsl:value-of select="$pName" disable-output-escaping="yes" />
          </a>
        </div>
        <div class="price">
          <xsl:if test="number($our-price) &lt; number($list-price)">
          <xsl:if test="number($list-price) > 0">
            <div class="price-msrp">
              <xsl:text>$</xsl:text>
              <xsl:value-of select="format-number($list-price, $number-format)" />
            </div>
            </xsl:if>
          </xsl:if>
          <xsl:if test="number($our-price)">
            <div class="price-sale">
              <xsl:text>$</xsl:text>
              <xsl:value-of select="format-number($our-price, $number-format)" />
            </div>
          </xsl:if>
        </div>
      </div>
    </xsl:template>

    <xsl:template name="Paging" >
      <xsl:if test="string-length($ViewAllArtPm) = 0 and not(/root/searchresults/hits/originhit)">
        <xsl:if test="$productRecordCount>$itemsPerPage">

          <div class="pagination">
            <label>Pages:</label>

            <ul>
              <xsl:call-template name="for.loop">
                <xsl:with-param name="i">1</xsl:with-param>
                <!--<xsl:with-param name="count" select="($productRecordCount div $itemsPerPage) + 1"></xsl:with-param>-->
                <xsl:with-param name="count">
                  <xsl:choose>
                    <xsl:when test="number(($productRecordCount div $itemsPerPage) + 1) &lt; 10">
                      <xsl:value-of select="number(($productRecordCount div $itemsPerPage) + 1)" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="10" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:with-param>
              </xsl:call-template>
            </ul>

            <div class="cycle-links">
              <xsl:call-template name="pagingprev">
                <xsl:with-param name="recordCount" select="$productRecordCount"/>
                <xsl:with-param name="linkText">
                  <xsl:text>&lt;&lt; Prev</xsl:text>
                </xsl:with-param>
              </xsl:call-template>

              <xsl:call-template name="pagingnext">
                <xsl:with-param name="recordCount" select="$productRecordCount"/>
                <xsl:with-param name="linkText">
                  <xsl:text>Next >></xsl:text>
                </xsl:with-param>
              </xsl:call-template>
            </div>
          </div>
        </xsl:if>
      </xsl:if>
    </xsl:template>

    <xsl:template name="AddToCartButton">
      <xsl:param name="ProductID" />
      <xsl:param name="VariantID" />
      <xsl:param name="ShowBuyButton" />
      <xsl:param name="HasInventory" />
      <xsl:param name="IsCallToOrder" select="number(0)" />

      <xsl:choose>
        <xsl:when test="$ShowBuyButton = 1 and $HasInventory = 1 and $IsCallToOrder = 0">
          <a rel="nofollow">
            <xsl:attribute name="href">
              <xsl:text>addtocart.aspx?ProductID=</xsl:text>
              <xsl:value-of select="$ProductID"/>
              <xsl:text>&amp;VariantID=</xsl:text>
              <xsl:value-of select="$VariantID"/>
              <xsl:text>&amp;Quantity=1</xsl:text>
            </xsl:attribute>
            <img src="{$SmartSearchIconDirectory}blue-add-to-cart2.png" alt="Add To Cart"/>
          </a>
        </xsl:when>
        <xsl:when test="$ShowBuyButton = 1 and $HasInventory = 1 and $IsCallToOrder = 1">
          <img alt="CALL TO ORDER" src="{$SmartSearchIconDirectory}blue-call-to-order.png" />
        </xsl:when>
        <xsl:otherwise>
          <xsl:copy-of select="$StringResource_HideBuyButton" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:template>

    <xsl:template match="facetquery" mode="removefacetlinks" >
      <xsl:variable name="currentterm" select="term" />
      <xsl:variable name="currentfield" select="field" />
      <xsl:variable name="currenttype">
        <xsl:choose>
          <xsl:when test="$currentfield='CategoryTree'">
            <xsl:value-of select="'Category'" />
          </xsl:when>
          <xsl:when test="$currentfield='ManufacturerID'">
            <xsl:value-of select="'Manufacturer'" />
          </xsl:when>
          <xsl:when test="$currentfield='SectionID'">
            <xsl:value-of select="'Section'" />
          </xsl:when>
          <xsl:when test="boolean($currentfield='HasInventory') or boolean($currentfield='AverageReview') or boolean($currentfield='PriceRange')">
            <xsl:value-of select="'Custom'" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="''" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="name" >
        <xsl:choose>
          <xsl:when test="$currenttype != '' and $currenttype != 'Custom'">
            <xsl:value-of select="/root/EntityHelpers/*[name()=$currenttype]//Entity[EntityID=$currentterm]/Name" />
          </xsl:when>
          <xsl:when test="$currenttype != 'Custom'">
            <xsl:value-of select="/root/EntityHelpers/Section//Entity[EntityID=$currentterm]/Name" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$currentterm" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="facetquery">
        <xsl:apply-templates select="/root/searchresults/hits/facetqueries/facetquery[not(term=$currentterm and field=$currentfield) and not(term='Product' and field='ContentType')]" mode="generateFacetQuery" />
      </xsl:variable>
      <xsl:element name="span" >
        <xsl:attribute name="class">seperator</xsl:attribute>
        <xsl:value-of select="'|'" />
      </xsl:element>
      <xsl:choose>
        <xsl:when test="$currentterm = 0 and $currentfield = 'AverageReview'" >
          <xsl:value-of select="' Not Rated '" />
        </xsl:when>
        <xsl:when test="$currentterm &lt; 6 and $currentterm > 0 and $currentfield = 'AverageReview'" >
          <xsl:value-of select="concat($currentterm, ' Stars', ' ')" />
        </xsl:when>
        <xsl:when test="$currentterm = 0 and $currentfield = 'PriceRange'" >
          <xsl:value-of select="' $0 - $50 '" />
        </xsl:when>
        <xsl:when test="$currentterm = 1 and $currentfield = 'PriceRange'" >
          <xsl:value-of select="' $50 - $100 '" />
        </xsl:when>
        <xsl:when test="$currentterm = 2 and $currentfield = 'PriceRange'" >
          <xsl:value-of select="' $100 - $200 '" />
        </xsl:when>
        <xsl:when test="$currentterm = 3 and $currentfield = 'PriceRange'" >
          <xsl:value-of select="' $200 - $300 '" />
        </xsl:when>
        <xsl:when test="$currentterm = 4 and $currentfield = 'PriceRange'" >
          <xsl:value-of select="' $300 - $400 '" />
        </xsl:when>
        <xsl:when test="$currentterm = 5 and $currentfield = 'PriceRange'" >
          <xsl:value-of select="' $400 - $500 '" />
        </xsl:when>
        <xsl:when test="$currentterm = 6 and $currentfield = 'PriceRange'" >
          <xsl:value-of select="' $500 &amp; Up '" />
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="concat(' ', $name, ' ')" />
        </xsl:otherwise>
      </xsl:choose>
      <xsl:element name="a">
        <xsl:attribute name="class">remove-faceting-link</xsl:attribute>
        <xsl:attribute name="href">
          <xsl:value-of select="$pageBase" />
          <xsl:if test="$facetquery != ''">
            <xsl:value-of select="concat('&amp;facet=', $facetquery)" />
          </xsl:if>
          <xsl:if test="$sortField != '' and not(contains($sortField, $defaultSortField))">
            <xsl:value-of select="concat('&amp;sortfield=', $sortField)" />
          </xsl:if>
          <xsl:if test="$itemsPerPage != '' and $itemsPerPage != $defaultItemsPerPage">
            &amp;pageSize=<xsl:value-of select="$itemsPerPage" />
          </xsl:if>
        </xsl:attribute>
        <xsl:value-of select="'[x]'"/>
      </xsl:element>
    </xsl:template>

    <xsl:template match="facetquery" mode="generateFacetQuery">
      <xsl:choose>
        <xsl:when test="position()=1" >
          <xsl:value-of select="field" />
          <xsl:value-of select="concat(':', term)" />
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="concat(',' , field)" />
          <xsl:value-of select="concat(':', term)" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:template>
    </xsl:stylesheet>
  </PackageTransform>
</package>


